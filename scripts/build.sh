#!/bin/bash

# scripts/build.sh - SCRIPT DE BUILD PARA PRODUCCI√ìN NORA AI

set -e  # Salir si alg√∫n comando falla

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Funci√≥n para logging
log() {
    echo -e "${BLUE}[BUILD]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
    exit 1
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

# ========================================
# VERIFICACIONES INICIALES
# ========================================

log "üöÄ Iniciando build de NORA AI Mobile..."

# Verificar que estamos en el directorio correcto
if [ ! -f "package.json" ]; then
    error "No se encontr√≥ package.json. Ejecuta este script desde la ra√≠z del proyecto."
fi

# Verificar que existe app.json
if [ ! -f "app.json" ]; then
    error "No se encontr√≥ app.json. Verifica la configuraci√≥n del proyecto Expo."
fi

# Verificar variables de entorno
if [ ! -f ".env" ]; then
    warn "No se encontr√≥ archivo .env. Copiando desde .env.example..."
    if [ -f ".env.example" ]; then
        cp .env.example .env
        log "Se cre√≥ .env desde .env.example. Por favor, configura tus variables de entorno."
    else
        error "No se encontr√≥ .env.example. Verifica la configuraci√≥n del proyecto."
    fi
fi

# Verificar EAS CLI
if ! command -v eas &> /dev/null; then
    error "EAS CLI no est√° instalado. Instala con: npm install -g @expo/eas-cli"
fi

# ========================================
# PREPARACI√ìN DEL BUILD
# ========================================

log "üì¶ Preparando dependencias..."

# Limpiar node_modules si es necesario
if [ "$1" == "--clean" ]; then
    log "üßπ Limpiando node_modules..."
    rm -rf node_modules
    rm -f package-lock.json
    rm -f yarn.lock
fi

# Instalar dependencias
log "üì• Instalando dependencias..."
npm ci

# Type check
log "üîç Verificando tipos TypeScript..."
npm run type-check

# Linting
log "üîß Ejecutando linter..."
npm run lint

# ========================================
# CONFIGURACI√ìN DE BUILD
# ========================================

# Determinar tipo de build
BUILD_TYPE=${2:-"preview"}
case $BUILD_TYPE in
    "dev"|"development")
        BUILD_PROFILE="development"
        log "üõ†Ô∏è  Configurando build para desarrollo..."
        ;;
    "preview"|"staging")
        BUILD_PROFILE="preview"
        log "üëÄ Configurando build preview..."
        ;;
    "prod"|"production")
        BUILD_PROFILE="production"
        log "üöÄ Configurando build de producci√≥n..."
        ;;
    *)
        error "Tipo de build no v√°lido: $BUILD_TYPE. Usa: dev, preview, o production"
        ;;
esac

# ========================================
# VERIFICACIONES DE PRODUCCI√ìN
# ========================================

if [ "$BUILD_PROFILE" == "production" ]; then
    log "üîê Verificaciones de producci√≥n..."
    
    # Verificar certificados y credenciales
    if [ ! -f "service-account-key.json" ]; then
        warn "No se encontr√≥ service-account-key.json para Android"
    fi
    
    # Verificar variables de entorno de producci√≥n
    source .env
    if [ -z "$EXPO_PUBLIC_FIREBASE_API_KEY" ]; then
        error "EXPO_PUBLIC_FIREBASE_API_KEY no est√° configurada"
    fi
    
    if [ -z "$EXPO_PUBLIC_FIREBASE_PROJECT_ID" ]; then
        error "EXPO_PUBLIC_FIREBASE_PROJECT_ID no est√° configurada"
    fi
    
    success "‚úÖ Verificaciones de producci√≥n completadas"
fi

# ========================================
# BUILD PARA ANDROID
# ========================================

build_android() {
    log "ü§ñ Iniciando build para Android..."
    
    # Verificar que EAS est√° configurado
    if [ ! -f "eas.json" ]; then
        error "No se encontr√≥ eas.json. Verifica la configuraci√≥n de EAS."
    fi
    
    # Login a EAS (si es necesario)
    if ! eas whoami > /dev/null 2>&1; then
        log "üîë Iniciando sesi√≥n en EAS..."
        eas login
    fi
    
    # Build
    log "üî® Construyendo APK/AAB para Android..."
    eas build --platform android --profile $BUILD_PROFILE --non-interactive
    
    if [ $? -eq 0 ]; then
        success "‚úÖ Build de Android completado exitosamente"
        
        # Si es preview, descargar APK
        if [ "$BUILD_PROFILE" == "preview" ]; then
            log "üì± Para instalar el APK, desc√°rgalo desde: https://expo.dev/artifacts"
        fi
    else
        error "‚ùå Build de Android fall√≥"
    fi
}

# ========================================
# BUILD PARA iOS (opcional)
# ========================================

build_ios() {
    log "üçé Iniciando build para iOS..."
    
    if [ "$(uname)" != "Darwin" ]; then
        warn "Build de iOS solo disponible en macOS"
        return 0
    fi
    
    # Build
    log "üî® Construyendo para iOS..."
    eas build --platform ios --profile $BUILD_PROFILE --non-interactive
    
    if [ $? -eq 0 ]; then
        success "‚úÖ Build de iOS completado exitosamente"
    else
        error "‚ùå Build de iOS fall√≥"
    fi
}

# ========================================
# EJECUTAR BUILDS
# ========================================

PLATFORM=${3:-"android"}

case $PLATFORM in
    "android")
        build_android
        ;;
    "ios")
        build_ios
        ;;
    "all")
        build_android
        build_ios
        ;;
    *)
        error "Plataforma no v√°lida: $PLATFORM. Usa: android, ios, o all"
        ;;
esac

# ========================================
# POST-BUILD
# ========================================

log "üìã Build completado. Resumen:"
echo "  - Perfil: $BUILD_PROFILE"
echo "  - Plataforma: $PLATFORM"
echo "  - Timestamp: $(date)"

if [ "$BUILD_PROFILE" == "production" ]; then
    log "üöÄ Para subir a stores:"
    echo "  - Android: eas submit --platform android"
    echo "  - iOS: eas submit --platform ios"
fi

success "üéâ ¬°Build de NORA AI Mobile completado exitosamente!"

# ========================================
# NOTIFICACI√ìN OPCIONAL
# ========================================

# Si tienes configurado alg√∫n webhook o notificaci√≥n
# curl -X POST "your-webhook-url" -d "Build $BUILD_PROFILE completado"

log "üì± La aplicaci√≥n NORA AI est√° lista para usar!"